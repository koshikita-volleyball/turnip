name: staging-deploy
on:
  push:
    branches:
      - 'staging/*'

env:
  project-name: ${{ secrets.PROJECT_NAME }}

jobs:
  staging-deploy:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./server/
    steps:
      - run: echo ${{ needs.job1.outputs.output1 }} ${{ needs.job1.outputs.output2 }}
      - name: Echo branch name
        run: echo ${{ needs.get-branch-name.outputs.branch_name }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Create dotenv file
        run: echo $'${{ secrets.LAMBDA_DOTENV }}' > ./src/.env
      - name: Add Data to dotenv file
        run: |
          branch_name=${GITHUB_REF#refs/heads/}  # refs/heads/を削除
          branch_name=${branch_name#staging/}  # staging/を削除
          echo "ENVIRONMENT=staging" >> ./src/.env
          echo "S3_BUCKET_NAME=${{ env.project-name }}-staging-$branch_name-s3-bucket" >> ./src/.env
          echo "LISTED_INFO_DYNAMODB_TABLE_NAME=${{ env.project-name }}-staging-$branch_name-listed-info" >> ./src/.env
          echo "PRICES_DAILY_QUOTES_DYNAMODB_TABLE_NAME=${{ env.project-name }}-staging-$branch_name-prices-daily-quotes" >> ./src/.env
          echo "FINS_STATEMENTS_DYNAMODB_TABLE_NAME=${{ env.project-name }}-staging-$branch_name-fins-statements" >> ./src/.env
      - run: sam build --use-container
      - name: Deploy Lambda
        run: |
          branch_name=${GITHUB_REF#refs/heads/}  # refs/heads/を削除
          branch_name=${branch_name#staging/}  # staging/を削除
          sam deploy --stack-name ${{ env.project-name }}-staging-$branch_name
