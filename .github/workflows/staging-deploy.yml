name: Staging Deploy
on:
  push:
    branches:
      - 'staging/*'

env:
  project-name: koshikita-volleyball-turnip
  server-directory: ./server

jobs:
  get-branch-name:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.get-branch-step.outputs.branch_name }}
    steps:
      - id: get-branch-step
        name: Get branch name
        run: |
          branch_name=${GITHUB_REF#refs/heads/}  # refs/heads/を削除
          branch_name=${branch_name#staging/}  # staging/を削除
          echo "Deploying to staging branch $branch_name"
          echo "branch_name=world" >> $GITHUB_OUTPUT
  staging-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Echo branch name
        run: echo ${{ needs.get-branch-name.outputs.branch_name }}
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: aws-actions/setup-sam@v2
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      # - name: Create dotenv file
      #   run: echo $'${{ secrets.LAMBDA_DOTENV }}' > ./src/.env
      #   working-directory: ${{ env.server-directory }}
      # - run: sam build --use-container
      #   working-directory: ${{ env.server-directory }}
      # - name: Deploy Lambda
      #   run: sam deploy --stack-name ${{ env.project-name }}-staging-${{ needs.stagin-deploy.outputs.branch_name }}
      #   working-directory: ${{ env.server-directory }}
